########################################
#
# gitのaliasとか便利関数とか
#
########################################

## alias
alias g='git'
alias gc='git commit -v'
alias gco='git checkout'
alias gb='git branch'
alias gba='git branch -a'
alias ga='git add'
alias gaa='git add .'
alias gm='git merge'
alias gf='git fetch'
alias grh='git reset HEAD'
alias grhh='git reset HEAD --hard'
alias gd='git diff'
alias gdc='git diff --cached'
alias gl='git log'
alias glg='git log --graph --date=short --decorate=short --pretty=format:"%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s"'
alias gs='git status -s -b'
alias gst='git status'
alias gn='git now -s'
alias gan='git add . && git now -s'
alias gp='git push '
alias gpm='git push origin '

# zsh の exntended_glob と HEAD^^^ を共存させる。
# http://subtech.g.hatena.ne.jp/cho45/20080617/1213629154
typeset -A abbreviations
abbreviations=(
	"HEAD^"     "HEAD\\^"
	"HEAD^^"    "HEAD\\^\\^"
	"HEAD^^^"   "HEAD\\^\\^\\^"
	"HEAD^^^^"  "HEAD\\^\\^\\^\\^\\^"
	"HEAD^^^^^" "HEAD\\^\\^\\^\\^\\^"
	"head^"     "HEAD\\^"
	"head^^"    "HEAD\\^\\^"
	"head^^^"   "HEAD\\^\\^\\^"
	"head^^^^"  "HEAD\\^\\^\\^\\^\\^"
	"head^^^^^" "HEAD\\^\\^\\^\\^\\^"
)

magic-abbrev-expand () {
		    local MATCH
		    LBUFFER=${LBUFFER%%(#m)[-_a-zA-Z0-9^]#}
		    LBUFFER+=${abbreviations[$MATCH]:-$MATCH}
}

magic-abbrev-expand-and-insert () {
			       magic-abbrev-expand
			       zle self-insert
}

magic-abbrev-expand-and-accept () {
			       magic-abbrev-expand
			       zle accept-line
}

no-magic-abbrev-expand () {
		       LBUFFER+=' '
}

zle -N magic-abbrev-expand
zle -N magic-abbrev-expand-and-insert
zle -N magic-abbrev-expand-and-accept
zle -N no-magic-abbrev-expand
bindkey "\r"  magic-abbrev-expand-and-accept # M-x RET はできなくなる
bindkey "^J"  accept-line # no magic
bindkey " "   magic-abbrev-expand-and-insert
bindkey "."   magic-abbrev-expand-and-insert
bindkey "^x " no-magic-abbrev-expand

# Enter で ls と git status を表示 http://qiita.com/yuyuchu3333/items/e9af05670c95e2cc5b4d
function show_ls_and_git_status() {
    if [ -n "$BUFFER" ]; then
        zle accept-line
        return 0
    fi
    echo
    # lsの代わりに、最大表示個数制限があるlsのカスタム関数を使用
    ls_abbrev
    if [ "$(git rev-parse --is-inside-work-tree 2> /dev/null)" = 'true' ]; then
        echo
        echo -e "\e[0;33m--- git status ---\e[0m"
        # git status -sb
        gs
    fi
    zle reset-prompt 2> /dev/null
    return 0
}
zle -N show_ls_and_git_status
bindkey '^m' show_ls_and_git_status